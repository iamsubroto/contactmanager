{"version":3,"sources":["context.js","component/contacts/Contact.js","component/contacts/Contacts.js","component/layout/Header.js","component/layout/TextInputGroup.js","component/contacts/AddContact.js","component/contacts/EditContact.js","component/Pages/About.js","component/Pages/NotFound.js","component/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","isProtected","delete","toggleProtection","console","log","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","About","NotFound","Test","title","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf22825e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios'\r\nimport { stat } from 'fs';\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT': \r\n            return  {\r\n                ...state,\r\n                contacts: state.contacts.filter(\r\n                    contact => contact.id !== action.payload\r\n                )\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };  \r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts:state.contacts.map( contact => \r\n                    contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n            }\r\n        // case 'TOGGLE_CONTACT':\r\n        //     return  {\r\n        //         ...state,\r\n        //         contacts: state.contacts.map(\r\n        //             contact => {\r\n        //                 if(contact.id == action.payload) {\r\n        //                     contact.isProtected = !contact.isProtected;\r\n        //                 }\r\n        //                 return contact;\r\n        //             }\r\n        //         )\r\n        //     };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [\r\n            // {\r\n            //     id: 1,\r\n            //     name: \"Subroto Biswas\",\r\n            //     email: \"biswas.subroto@gmail.com\",\r\n            //     phone: \"222-222-2222\",\r\n            //     isProtected: false,\r\n            // },\r\n            // {\r\n            //     id: 2,\r\n            //     name: \"Shivam Poddar\",\r\n            //     email: \"poddar.shivam344@rediffmail\",\r\n            //     phone: \"888-888-8888\",\r\n            //     isProtected: true,\r\n            // },\r\n            // {\r\n            //     id: 3,\r\n            //     name: \"Rahul Roy\",\r\n            //     email: \"Rahul_Roy@hotmail.com\",\r\n            //     phone: \"444-444-4444\",\r\n            //     isProtected: false,\r\n            // }   \r\n       ],\r\n       dispatch: action => {\r\n           this.setState(state => reducer(state, action));\r\n       }\r\n    }\r\n    async componentDidMount() {\r\n        const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n        this.setState({contacts: res.data});\r\n            \r\n    }\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n            {this.props.children}\r\n            </Context.Provider>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  }\r\n  onShowClick = e => {\r\n    this.setState({showContactInfo: !this.state.showContactInfo});\r\n  };\r\n  onDeleteClick = async(id, isProtected, dispatch) => {\r\n    await axios.delete\r\n    (`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    dispatch({\r\n      type: 'DELETE_CONTACT',\r\n      payload: id\r\n    })\r\n\r\n  }\r\n  toggleProtection = (id, dispatch) => {\r\n    console.log(\"locked\");\r\n    dispatch({type: 'TOGGLE_CONTACT', payload: id});\r\n  }\r\n  render() {\r\n    const {name, email, phone, isProtected, id} = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n        <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n          <div className=\"card card-body mb-3\">\r\n            <h4>\r\n            {name} \r\n            <i onClick={this.onShowClick} className=\"fa fa-sort-down\" style={{cursor: 'pointer'}}></i>\r\n            <i className=\"fas fa-times\" style={{cursor: 'pointer', float: 'right', color: 'red'}} onClick={this.onDeleteClick.bind(this, id, isProtected, dispatch)}></i>\r\n            <Link to={`contact/edit/${id}`}>\r\n              <i \r\n              className=\"fas fa-pencil-alt\"\r\n              style={{\r\n                cursor: 'pointer',\r\n                float: 'right',\r\n                color: '#000',\r\n                marginRight: '1rem'\r\n              }}\r\n              >\r\n              </i>\r\n            </Link>\r\n            </h4>\r\n            {showContactInfo ? (<ul className=\"list-group\">\r\n                <li className=\"list-group-item\">Email: {email}</li>\r\n                <li className=\"list-group-item\">Phone: {phone}</li>\r\n            </ul>):null }\r\n        </div>\r\n          )\r\n        }}\r\n    </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contact;","import React, {Component} from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\r\n                            {\r\n                                contacts.map(contact => (\r\n                                    <Contact \r\n                                    key={contact.id} \r\n                                    contact={contact} \r\n                                    />\r\n                                ))\r\n                            }\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst  Header = (props) => {\r\n    const {branding} = props;\r\n  return (                      \r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-3\">\r\n    <div className=\"container\">                                                                                       \r\n      <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n      <div>\r\n        <ul className=\"navbar-nav mr-auto\">\r\n        <Link to=\"/\" className=\"nav-link\"><span className=\"fas fa-home\"></span> Home</Link>\r\n        <Link to=\"/addContact\" className=\"nav-link\"><span className=\"fas fa-plus\"></span> Add</Link>\r\n        <Link to=\"/about\" className=\"nav-link\"><span className=\"fas fa-question\"></span> About</Link>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    </nav>\r\n  )\r\n}\r\nHeader.defaultProps = {\r\n  branding: \"My Contacts\"\r\n}\r\nexport default Header;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input \r\n        type={type}\r\n        name={name} \r\n        className={classnames('form-control',{\r\n            'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        />\r\n        { error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport axios from 'axios';\r\n\r\n\r\nclass AddContact extends Component {\r\n    state={\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n    onChange = e => this.setState({[e.target.name]: e.target.value});\r\n    onSubmit = async(dispatch, e) => {\r\n        e.preventDefault();\r\n        \r\n        const { name, email, phone} = this.state;\r\n\r\n        // check errors\r\n        if(name === '') {\r\n            this.setState({errors:{name: \"Name is required.\"}});\r\n            return;\r\n        }\r\n        if(email === '') {\r\n            this.setState({errors:{email: \"E-mail is required.\"}});\r\n            return;\r\n        }\r\n        if(phone === '') {\r\n            this.setState({errors:{phone: \"Phone is required.\"}});\r\n            return;\r\n        }\r\n         const newContact = {\r\n             name,\r\n             email,\r\n             phone\r\n         }\r\n\r\n\r\n        const res= await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\r\n            dispatch({\r\n                type: \"ADD_CONTACT\",\r\n                payload: res.data\r\n            })\r\n\r\n         // for clear inputs value after submiting\r\n         this.setState({\r\n             name: '',\r\n             email: '',\r\n             phone: '',\r\n             errors: {}\r\n         });\r\n\r\n         this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const {name, email, phone, errors } = this.state;\r\n    return (\r\n        <Consumer>\r\n            {value => {\r\n                const { dispatch } = value;\r\n                return (\r\n      <div className=\"card mb-3\">\r\n        <div className=\"card-header\">Add Contact</div>\r\n        <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                <TextInputGroup\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={this.onChange}\r\n                error={errors.name}\r\n                />\r\n                <TextInputGroup\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Enter E-mail Address\"\r\n                value={email}\r\n                onChange={this.onChange}\r\n                error={errors.email}\r\n                />\r\n                <TextInputGroup\r\n                label=\"Phone\"\r\n                name=\"phone\"\r\n                placeholder=\"Enter Phone Number\"\r\n                value={phone}\r\n                onChange={this.onChange}\r\n                error={errors.phone}\r\n                />\r\n                <input \r\n                type=\"submit\" \r\n                value=\"Add Contact\" \r\n                className=\"btn btn-secondary btn-block\" \r\n                />\r\n            </form>\r\n        </div>\r\n      </div>\r\n                )\r\n            }}\r\n        </Consumer>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport axios from 'axios';\r\n\r\n\r\nclass EditContact extends Component {\r\n    state={\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n    onChange = e => this.setState({[e.target.name]: e.target.value});\r\n    onSubmit = async(dispatch, e) => {\r\n        e.preventDefault();\r\n        \r\n        const { name, email, phone} = this.state;\r\n\r\n        // check errors\r\n        if(name === '') {\r\n            this.setState({errors:{name: \"Name is required.\"}});\r\n            return;\r\n        }\r\n        if(email === '') {\r\n            this.setState({errors:{email: \"E-mail is required.\"}});\r\n            return;\r\n        }\r\n        if(phone === '') {\r\n            this.setState({errors:{phone: \"Phone is required.\"}});\r\n            return;\r\n        }\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n         // for clear inputs value after submiting\r\n         this.setState({\r\n             name: '',\r\n             email: '',\r\n             phone: '',\r\n             errors: {}\r\n         });\r\n\r\n         this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const {name, email, phone, errors } = this.state;\r\n    return (\r\n        <Consumer>\r\n            {value => {\r\n                const { dispatch } = value;\r\n                return (\r\n      <div className=\"card mb-3\">\r\n        <div className=\"card-header\">Edit Contact</div>\r\n        <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                <TextInputGroup\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={this.onChange}\r\n                error={errors.name}\r\n                />\r\n                <TextInputGroup\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Enter E-mail Address\"\r\n                value={email}\r\n                onChange={this.onChange}\r\n                error={errors.email}\r\n                />\r\n                <TextInputGroup\r\n                label=\"Phone\"\r\n                name=\"phone\"\r\n                placeholder=\"Enter Phone Number\"\r\n                value={phone}\r\n                onChange={this.onChange}\r\n                error={errors.phone}\r\n                />\r\n                <input \r\n                type=\"submit\" \r\n                value=\"Update Contact\" \r\n                className=\"btn btn-secondary btn-block\" \r\n                />\r\n            </form>\r\n        </div>\r\n      </div>\r\n                )\r\n            }}\r\n        </Consumer>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default EditContact;","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n      <a href=\"#\" className=\"btn btn-primary btn-sm\">check for updates</a>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n class Test extends Component {\r\n    state = {\r\n        title: '',\r\n        id: ''\r\n    }\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                title: data.title,\r\n                id: data.id\r\n            }))\r\n        }\r\n    //  componentWillMount() {\r\n    //      console.log(\"componentwillmount\");\r\n    //  }\r\n  render() {\r\n      const {id, title } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Test</h1>\r\n        <h4>{id}</h4>\r\n        <p>{title}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Test\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport Contacts from './component/contacts/Contacts';\nimport Header from \"./component/layout/Header\";\nimport AddContact from \"./component/contacts/AddContact\";\nimport EditContact from \"./component/contacts/EditContact\";\nimport About from \"./component//Pages/About\";\n\nimport {Provider} from './context';\nimport \"./App.css\"; \nimport NotFound from \"./component/Pages/NotFound\";\nimport Test from \"./component/Test\";\n\n\n\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header />\n              <div className=\"container\">\n              {/* <AddContact />\n              <Contacts /> */}\n                <Switch>\n                  <Route exact path=\"/\" component={Contacts} />\n                  <Route exact path=\"/addContact\" component={AddContact} />                  \n                  <Route exact path=\"/contact/edit/:id\" component={EditContact} />                  \n                  <Route exact path=\"/about\" component={About} />\n                  <Route exact path=\"/test\" component={Test} />                  \n                  <Route component={NotFound} />\n                </Switch>\n              </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n \nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}